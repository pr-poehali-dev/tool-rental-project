import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";

interface CartItem {
  id: string;
  name: string;
  price: number;
  image: string;
}

interface CatalogProps {
  addToCart: (item: CartItem) => void;
}

export default function Catalog({ addToCart }: CatalogProps) {
  const toolsData = [
    { id: 'drill', name: '–î—Ä–µ–ª–∏ –∏ –ø–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä—ã', price: 500, image: '/img/8e692f85-62a5-44a8-b9f1-04eeb0249b8a.jpg', badges: ['Bosch', 'Makita'] },
    { id: 'screwdriver', name: '–®—É—Ä—É–ø–æ–≤–µ—Ä—Ç', price: 300, image: '/placeholder.svg', badges: ['18V', '12V'] },
    { id: 'grinder', name: '–ë–æ–ª–≥–∞—Ä–∫–∞', price: 400, image: '/placeholder.svg', badges: ['125–º–º', '230–º–º'] },
    { id: 'wrench-set', name: '–ù–∞–∫–∏–¥–Ω—ã–µ –∫–ª—é—á–∏', price: 150, image: '/placeholder.svg', badges: ['–ù–∞–±–æ—Ä', '8-22–º–º'] },
    { id: 'gas-wrench', name: '–ì–∞–∑–æ–≤—ã–π –∫–ª—é—á', price: 200, image: '/placeholder.svg', badges: ['‚Ññ1', '‚Ññ2'] },
    { id: 'adjustable-wrench', name: '–†–∞–∑–≤–æ–¥–Ω–æ–π –∫–ª—é—á', price: 100, image: '/placeholder.svg', badges: ['250–º–º', '300–º–º'] },
    { id: 'sledgehammer', name: '–ú–æ–ª–æ—Ç–æ–∫', price: 120, image: '/placeholder.svg', badges: ['500–≥', '1–∫–≥'] },
    { id: 'jigsaw', name: '–õ–æ–±–∑–∏–∫', price: 350, image: '/placeholder.svg', badges: ['–≠–ª–µ–∫—Ç—Ä–æ', '–ê–∫–∫—É–º'] },
    { id: 'perforator', name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä', price: 600, image: '/placeholder.svg', badges: ['SDS+', 'SDS-max'] },
    { id: 'screwdrivers', name: '–û—Ç–≤–µ—Ä—Ç–∫–∏', price: 80, image: '/placeholder.svg', badges: ['–ù–∞–±–æ—Ä', 'Phillips'] },
    { id: 'level', name: '–£—Ä–æ–≤–µ–Ω—å', price: 150, image: '/placeholder.svg', badges: ['60—Å–º', '120—Å–º'] },
    { id: 'tape-measure', name: '–†—É–ª–µ—Ç–∫–∞', price: 60, image: '/placeholder.svg', badges: ['5–º', '10–º'] },
    { id: 'crowbar', name: '–õ–æ–º', price: 180, image: '/placeholder.svg', badges: ['60—Å–º', '90—Å–º'] },
    { id: 'shovel', name: '–õ–æ–ø–∞—Ç—ã/–≥—Ä–∞–±–ª–∏', price: 100, image: '/placeholder.svg', badges: ['–®—Ç—ã–∫–æ–≤–∞—è', '–°–æ–≤–∫–æ–≤–∞—è'] },
    { id: 'square', name: '–£–≥–æ–ª–æ–∫', price: 80, image: '/placeholder.svg', badges: ['250–º–º', '300–º–º'] },
    { id: 'stapler', name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ç–µ–ø–ª–µ—Ä', price: 200, image: '/placeholder.svg', badges: ['–ú–µ—Ö–∞–Ω', '–ü–Ω–µ–≤–º–æ'] }
  ];

  const campingData = [
    { id: 'tent', name: '–ü–∞–ª–∞—Ç–∫–∏ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ', price: 800, image: '/img/a567fb75-efd9-4c18-9edc-a4cdc9f3d05b.jpg', badges: ['2-4 –º–µ—Å—Ç–∞'] },
    { id: 'flashlight', name: '–§–æ–Ω–∞—Ä—å', price: 150, image: '/placeholder.svg', badges: ['LED', '–ê–∫–∫—É–º'] },
    { id: 'backpack', name: '–†—é–∫–∑–∞–∫', price: 300, image: '/placeholder.svg', badges: ['40–ª', '60–ª'] },
    { id: 'thermos', name: '–¢–µ—Ä–º–æ—Å', price: 200, image: '/placeholder.svg', badges: ['1–ª', '2–ª'] },
    { id: 'axe', name: '–¢–æ–ø–æ—Ä', price: 250, image: '/placeholder.svg', badges: ['600–≥', '1–∫–≥'] },
    { id: 'pot', name: '–ö–æ—Ç–µ–ª–æ–∫', price: 180, image: '/placeholder.svg', badges: ['1–ª', '2–ª'] },
    { id: 'sleeping-bag', name: '–°–ø–∞–ª—å–Ω–∏–∫', price: 400, image: '/placeholder.svg', badges: ['-5¬∞C', '-15¬∞C'] },
    { id: 'gas-burner', name: '–ì–æ—Ä–µ–ª–∫–∞ –≥–∞–∑–æ–≤–∞—è', price: 300, image: '/placeholder.svg', badges: ['–ü–æ—Ä—Ç–∞—Ç', '–¢—É—Ä–∏—Å—Ç–∏—á'] },
    { id: 'gas-canister', name: '–ì–∞–∑–æ–≤—ã–µ –±–∞–ª–ª–æ–Ω—ã', price: 100, image: '/placeholder.svg', badges: ['220–≥', '450–≥'] },
    { id: 'mat', name: '–ü–µ–Ω–∫–∞ —Å–∏–¥—É—à–∫–∞', price: 80, image: '/placeholder.svg', badges: ['–ö–∞—Ä–µ–º–∞—Ç', '–°–∏–¥—É—à–∫–∞'] },
    { id: 'knife', name: '–ù–æ–∂', price: 150, image: '/placeholder.svg', badges: ['–°–∫–ª–∞–¥', '–§–∏–∫—Å'] },
    { id: 'chair', name: '–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç—É–ª', price: 200, image: '/placeholder.svg', badges: ['–°–∫–ª–∞–¥', '–õ–µ–≥–∫–∏–π'] }
  ];

  return (
    <section id="catalog" className="py-16 bg-gradient-to-br from-blue-50 to-indigo-100 opacity-0 animate-fade-in" style={{animationDelay: '0.4s', animationFillMode: 'forwards'}}>
      <div className="container mx-auto px-4">
        <h2 className="font-heading text-3xl font-bold text-center mb-12">–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h2>
        
        {/* –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã */}
        <div className="mb-16">
          <h3 className="font-heading text-2xl font-semibold text-center mb-8 text-primary">üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {toolsData.map((item) => (
              <Card key={item.id} className="hover:shadow-xl transition-all duration-300 border-0 bg-white/70 backdrop-blur-sm hover:bg-white hover:scale-105">
                <CardHeader className="pb-3">
                  <div className="w-full h-48 bg-gray-200 rounded-lg mb-4 overflow-hidden flex items-center justify-center">
                    {item.image === '/placeholder.svg' ? (
                      <Icon name="Wrench" size={64} className="text-secondary" />
                    ) : (
                      <img 
                        src={item.image} 
                        alt={item.name} 
                        className="w-full h-full object-cover"
                      />
                    )}
                  </div>
                  <CardTitle className="text-lg">{item.name}</CardTitle>
                  <CardDescription>–û—Ç {item.price}‚ÇΩ/—Å—É—Ç–∫–∏</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-2 mb-3 flex-wrap">
                    {item.badges.map((badge, index) => (
                      <Badge key={index} variant="secondary">{badge}</Badge>
                    ))}
                  </div>
                  <Button 
                    className="w-full" 
                    variant="outline"
                    onClick={() => addToCart({
                      id: item.id,
                      name: item.name,
                      price: item.price,
                      image: item.image
                    })}
                  >
                    <Icon name="Plus" size={16} className="mr-2" />
                    –í –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ */}
        <div className="mb-12">
          <h3 className="font-heading text-2xl font-semibold text-center mb-8 text-primary">‚õ∫ –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {campingData.map((item) => (
              <Card key={item.id} className="hover:shadow-xl transition-all duration-300 border-0 bg-white/70 backdrop-blur-sm hover:bg-white hover:scale-105">
                <CardHeader className="pb-3">
                  <div className="w-full h-48 bg-gray-200 rounded-lg mb-4 overflow-hidden flex items-center justify-center">
                    {item.image === '/placeholder.svg' ? (
                      <Icon name="Mountain" size={64} className="text-secondary" />
                    ) : (
                      <img 
                        src={item.image} 
                        alt={item.name} 
                        className="w-full h-full object-cover"
                      />
                    )}
                  </div>
                  <CardTitle className="text-lg">{item.name}</CardTitle>
                  <CardDescription>–û—Ç {item.price}‚ÇΩ/—Å—É—Ç–∫–∏</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-2 mb-3 flex-wrap">
                    {item.badges.map((badge, index) => (
                      <Badge key={index} variant="secondary">{badge}</Badge>
                    ))}
                  </div>
                  <Button 
                    className="w-full" 
                    variant="outline"
                    onClick={() => addToCart({
                      id: item.id,
                      name: item.name,
                      price: item.price,
                      image: item.image
                    })}
                  >
                    <Icon name="Plus" size={16} className="mr-2" />
                    –í –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
        
        <div className="text-center mt-8">
          <Button size="lg" className="bg-primary hover:bg-primary/90 hover:scale-105 transition-transform duration-200">
            –°–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥
            <Icon name="ArrowRight" size={20} className="ml-2" />
          </Button>
        </div>
      </div>
    </section>
  );
}