import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";

interface CartItem {
  id: string;
  name: string;
  price: number;
  hourlyPrice: number;
  image: string;
}

interface CatalogProps {
  addToCart: (item: CartItem) => void;
}

export default function Catalog({ addToCart }: CatalogProps) {
  const powerToolsData = [
    { id: 'grinder', name: '–ë–æ–ª–≥–∞—Ä–∫–∞', price: 270, hourlyPrice: 110, image: '/img/4db31d9d-eba9-482a-9692-25a7544aca68.jpg', badges: ['125–º–º'] },
    { id: 'screwdriver', name: '–®—É—Ä—É–ø–æ–≤–µ—Ä—Ç', price: 140, hourlyPrice: 60, image: '/img/59600e85-c1d2-41bf-8d48-c794aec24f92.jpg', badges: ['18V'] },
    { id: 'jigsaw', name: '–õ–æ–±–∑–∏–∫', price: 220, hourlyPrice: 90, image: '/img/8d13799b-c272-4b6e-8431-343f50155b8e.jpg', badges: ['–ê–∫–∫—É–º'] },
    { id: 'circular-saw', name: '–¶–∏—Ä–∫—É–ª—è—Ä–Ω–∞—è –ø–∏–ª–∞', price: 250, hourlyPrice: 100, image: '/img/e67dac9f-7d1f-456c-b6f9-a4910f280dce.jpg', badges: ['190–º–º'] },
    { id: 'reciprocating-saw', name: '–°–∞–±–µ–ª—å–Ω–∞—è –ø–∏–ª–∞', price: 200, hourlyPrice: 80, image: '/img/7f49204b-35e2-4835-9e2c-02f1321bcd1e.jpg', badges: ['–ê–∫–∫—É–º'] },
    { id: 'perforator', name: '–ü–µ—Ä—Ñ–æ—Ä–∞—Ç–æ—Ä', price: 600, hourlyPrice: 250, image: '/img/8e692f85-62a5-44a8-b9f1-04eeb0249b8a.jpg', badges: ['SDS+'] },
    { id: 'heat-gun', name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–µ–Ω', price: 100, hourlyPrice: 40, image: '/img/c595f387-16fe-4eb9-974a-401c46098843.jpg', badges: ['2000–í—Ç'] },
    { id: 'renovator', name: '–†–µ–Ω–æ–≤–∞—Ç–æ—Ä', price: 320, hourlyPrice: 130, image: '/img/15b1e73f-02b7-4cbd-95d4-eddc56dd38bb.jpg', badges: ['–ù–∞—Å–∞–¥–∫–∏'] },

    { id: 'sander', name: '–®–ª–∏—Ñ–æ–≤–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∫–∞', price: 280, hourlyPrice: 110, image: '/img/c3cba4e6-8d40-4b89-b871-f7b577415f1b.jpg', badges: ['–û—Ä–±–∏—Ç–∞–ª—å–Ω–∞—è'] },
    { id: 'planer', name: '–≠–ª–µ–∫—Ç—Ä–æ—Ä—É–±–∞–Ω–æ–∫', price: 250, hourlyPrice: 100, image: '/img/4cf73f13-8f19-48a6-8144-a2eebf92980c.jpg', badges: ['110–º–º'] },
    { id: 'impact-wrench', name: '–ì–∞–π–∫–æ–≤—ë—Ä—Ç', price: 310, hourlyPrice: 130, image: '/img/gaikover.jpg', badges: ['1/2"'] }
  ];

  const cleaningData = [
    { id: 'steam-cleaner', name: '–ü–∞—Ä–æ–æ—á–∏—Å—Ç–∏—Ç–µ–ª—å', price: 100, hourlyPrice: 40, image: '/img/9a27bb5b-52a8-4818-b3a3-51486a8a4105.jpg', badges: ['1000–í—Ç'] },
    { id: 'window-cleaner', name: '–ú–æ–π—â–∏–∫ –æ–∫–æ–Ω', price: 270, hourlyPrice: 110, image: '/img/31413823-7d75-4329-9859-505e84fc5d64.jpg', badges: ['–ü—Ä–æ—Ñ'] },
    { id: 'vacuum-cleaner', name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –ø—ã–ª–µ—Å–æ—Å', price: 240, hourlyPrice: 100, image: '/img/4fcd20e2-5b36-49fd-b63b-30264773ccab.jpg', badges: ['1000–í—Ç'] },
    { id: 'paint-sprayer', name: '–ö—Ä–∞—Å–∫–æ–ø—É–ª—å—Ç', price: 230, hourlyPrice: 100, image: '/img/2989e866-3828-42a2-bc2d-d4c407f099e4.jpg', badges: ['–≠–ª–µ–∫—Ç—Ä'] }
  ];

  const equipmentData = [

    { id: 'hydraulic-jack', name: '–î–æ–º–∫—Ä–∞—Ç –ø–æ–¥–∫–∞—Ç–Ω–æ–π', price: 240, hourlyPrice: 100, image: '/img/aa1d29f1-0130-4eb1-9974-6fd1be6b89ef.jpg', badges: ['2,5–¢'] },
    { id: 'work-light', name: '–ü—Ä–æ–∂–µ–∫—Ç–æ—Ä —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π', price: 60, hourlyPrice: 25, image: '/img/c22ac40a-641a-4ace-b343-cf6c059fa27a.jpg', badges: ['50–í—Ç', '100–í—Ç'] },
    { id: 'concrete-mixer', name: '–ë–µ—Ç–æ–Ω–æ–º–µ—à–∞–ª–∫–∞', price: 815, hourlyPrice: 330, image: '/img/8980d89d-d890-49ee-a50d-6d199bf37431.jpg', badges: ['150–ª', '200–ª'] },
    { id: 'battery-charger', name: '–ó–∞—Ä—è–¥–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ/–ø—É—Å–∫', price: 65, hourlyPrice: 30, image: '/img/65d208ad-24a9-4b01-9f36-3c91077d4f86.jpg', badges: ['12V', '24V'] },
    { id: 'pipe-scissors', name: '–ù–æ–∂–Ω–∏—Ü—ã –¥–ª—è –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö —Ç—Ä—É–±', price: 50, hourlyPrice: 20, image: '/img/scissors.jpg', badges: ['20-40–º–º', '16-63–º–º'] },
    { id: 'pipe-welder', name: '–ü–∞—è–ª—å–Ω–∏–∫ –¥–ª—è –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã—Ö —Ç—Ä—É–±', price: 100, hourlyPrice: 40, image: '/img/welder.jpg', badges: ['800–í—Ç', '1200–í—Ç'] },
    { id: 'stands', name: '–ö–æ–∑–ª—ã –ø–æ–¥–ø–æ—Ä–∫–∏ (–ø–∞—Ä–∞)', price: 140, hourlyPrice: 60, image: '/img/stands.jpg', badges: ['–†–µ–≥—É–ª', '–°–∫–ª–∞–¥–Ω—ã–µ'] },
    { id: 'extension-cord', name: '–£–¥–ª–∏–Ω–∏—Ç–µ–ª—å (–∫–∞—Ç—É—à–∫–∞ —Å –∫–∞–±–µ–ª–µ–º)', price: 90, hourlyPrice: 40, image: '/img/extension.jpg', badges: ['50–º', '100–º'] },
    { id: 'magnetic-level', name: '–î–ª–∏–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞ –º–∞–≥–Ω–∏—Ç–µ', price: 50, hourlyPrice: 20, image: '/img/level.jpg', badges: ['1–º', '2–º'] },
    { id: 'straps-set', name: '–ù–∞–±–æ—Ä —Å—Ç—è–∂–µ–∫/–ª–µ–Ω—Ç—ã/—â–∏–ø—Ü—ã', price: 70, hourlyPrice: 30, image: '/img/straps.jpg', badges: ['–ö–æ–º–ø–ª–µ–∫—Ç', '–†–∞–∑–Ω—ã–µ'] },
    { id: 'clamps', name: '–°—Ç—Ä—É–±—Ü–∏–Ω—ã', price: 50, hourlyPrice: 20, image: '/img/clamps.jpg', badges: ['G-–æ–±—Ä', 'F-–æ–±—Ä'] }
  ];



  return (
    <section id="catalog" className="py-16 bg-gradient-to-br from-blue-50 to-indigo-100 opacity-0 animate-fade-in" style={{animationDelay: '0.4s', animationFillMode: 'forwards'}}>
      <div className="container mx-auto px-4">
        <h2 className="font-heading text-3xl font-bold text-center mb-12">–ö–∞—Ç–∞–ª–æ–≥ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</h2>
        
        {/* –≠–ª–µ–∫—Ç—Ä–æ–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã */}
        <div className="mb-16">
          <h3 className="font-heading text-2xl font-semibold text-center mb-8 text-primary">‚ö° –≠–ª–µ–∫—Ç—Ä–æ–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {powerToolsData.map((item) => (
              <Card key={item.id} className="hover:shadow-xl transition-all duration-300 border-0 bg-white/70 backdrop-blur-sm hover:bg-white hover:scale-105">
                <CardHeader className="pb-3">
                  <div className="w-full h-48 bg-gray-200 rounded-lg mb-4 overflow-hidden flex items-center justify-center">
                    <img 
                      src={item.image} 
                      alt={item.name} 
                      className="w-full h-full object-cover"
                    />
                  </div>
                  <CardTitle className="text-lg">{item.name}</CardTitle>
                  <CardDescription>
                    {item.price}‚ÇΩ/—Å—É—Ç–∫–∏ ‚Ä¢ {item.hourlyPrice}‚ÇΩ/—á–∞—Å
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-2 mb-3 flex-wrap">
                    {item.badges.map((badge, index) => (
                      <Badge key={index} variant="secondary">{badge}</Badge>
                    ))}
                  </div>
                  <Button 
                    className="w-full" 
                    variant="outline"
                    onClick={() => addToCart({
                      id: item.id,
                      name: item.name,
                      price: item.price,
                      hourlyPrice: item.hourlyPrice,
                      image: item.image
                    })}
                  >
                    <Icon name="Plus" size={16} className="mr-2" />
                    –í –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* –£–±–æ—Ä–∫–∞ –∏ –ø–æ–∫—Ä–∞—Å–∫–∞ */}
        <div className="mb-16">
          <h3 className="font-heading text-2xl font-semibold text-center mb-8 text-primary">üßΩ –£–±–æ—Ä–∫–∞ –∏ –ø–æ–∫—Ä–∞—Å–∫–∞</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {cleaningData.map((item) => (
              <Card key={item.id} className="hover:shadow-xl transition-all duration-300 border-0 bg-white/70 backdrop-blur-sm hover:bg-white hover:scale-105">
                <CardHeader className="pb-3">
                  <div className="w-full h-48 bg-gray-200 rounded-lg mb-4 overflow-hidden flex items-center justify-center">
                    <img 
                      src={item.image} 
                      alt={item.name} 
                      className="w-full h-full object-cover"
                    />
                  </div>
                  <CardTitle className="text-lg">{item.name}</CardTitle>
                  <CardDescription>
                    {item.price}‚ÇΩ/—Å—É—Ç–∫–∏ ‚Ä¢ {item.hourlyPrice}‚ÇΩ/—á–∞—Å
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-2 mb-3 flex-wrap">
                    {item.badges.map((badge, index) => (
                      <Badge key={index} variant="secondary">{badge}</Badge>
                    ))}
                  </div>
                  <Button 
                    className="w-full" 
                    variant="outline"
                    onClick={() => addToCart({
                      id: item.id,
                      name: item.name,
                      price: item.price,
                      hourlyPrice: item.hourlyPrice,
                      image: item.image
                    })}
                  >
                    <Icon name="Plus" size={16} className="mr-2" />
                    –í –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ */}
        <div className="mb-16">
          <h3 className="font-heading text-2xl font-semibold text-center mb-8 text-primary">üèóÔ∏è –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</h3>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            {equipmentData.map((item) => (
              <Card key={item.id} className="hover:shadow-xl transition-all duration-300 border-0 bg-white/70 backdrop-blur-sm hover:bg-white hover:scale-105">
                <CardHeader className="pb-3">
                  <div className="w-full h-48 bg-gray-200 rounded-lg mb-4 overflow-hidden flex items-center justify-center">
                    <img 
                      src={item.image} 
                      alt={item.name} 
                      className="w-full h-full object-cover"
                    />
                  </div>
                  <CardTitle className="text-lg">{item.name}</CardTitle>
                  <CardDescription>
                    {item.price}‚ÇΩ/—Å—É—Ç–∫–∏ ‚Ä¢ {item.hourlyPrice}‚ÇΩ/—á–∞—Å
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex gap-2 mb-3 flex-wrap">
                    {item.badges.map((badge, index) => (
                      <Badge key={index} variant="secondary">{badge}</Badge>
                    ))}
                  </div>
                  <Button 
                    className="w-full" 
                    variant="outline"
                    onClick={() => addToCart({
                      id: item.id,
                      name: item.name,
                      price: item.price,
                      hourlyPrice: item.hourlyPrice,
                      image: item.image
                    })}
                  >
                    <Icon name="Plus" size={16} className="mr-2" />
                    –í –∫–æ—Ä–∑–∏–Ω—É
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>


        
        <div className="text-center mt-8">
          <Button 
            size="lg" 
            className="bg-primary hover:bg-primary/90 hover:scale-105 transition-transform duration-200"
            onClick={() => document.getElementById('catalog')?.scrollIntoView({ behavior: 'smooth' })}
          >
            –°–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥
            <Icon name="ArrowRight" size={20} className="ml-2" />
          </Button>
        </div>
      </div>
    </section>
  );
}